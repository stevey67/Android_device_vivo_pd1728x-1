---  addons:    apt:      packages:        - aria2       - zstd       - xz-utils     update:        - true after_success:    - "export version=$(cat bootable/recovery/variables.h | grep \"define TW_MAIN_VERSION_STR\" | cut -d '\"' -f2)"   - "cp $HOME/twrp/out/target/product/${_CODENAME_}/recovery.img $HOME/twrp/TWRP-$version-${_CODENAME_}-$(date +\"%Y%m%d\")-Unofficial.img"   - "cd $HOME/twrp/" before_install:    - "echo \"$DOCKER_PASSWORD\" | docker login -u \"$DOCKER_USERNAME\" --password-stdin 2>/dev/null"   - "docker pull fr3akyphantom/droid-builder:latest" before_script:    - "cd $HOME && mkdir twrp"   - "TWRP_SOURCE=\"https://github.com/PhantomZone54/twrp_sources_norepo/releases/download/v3.4.0-20201103/MinimalOmniRecovery-twrp-6.0-norepo-20201103.tzst\""   - "aria2c -x16 -s8 --console-log-level=error --summary-interval=0 \"${TWRP_SOURCE}\" -o twrp.tzst || wget -q --show-progress --progress=bar:force \"${TWRP_SOURCE}\" -O twrp.tzst"   - "tar --zstd -xf twrp.tzst --directory $HOME/twrp/ && rm twrp.tzst" branches:    except:      - "/^(?i:untagged)-.*$/"     - /^v\d+\.\d+(\.\d+)?(-\S*)?$/   only:      - master deploy:    cleanup: false   file: $HOME/twrp/*.img   file_glob: true   provider: releases   token: $GitOAUTHToken   true:      branch: master     repo: "${_USERNAME_}/${_REPO_SLUG_}"     tags: false dist: focal git:    depth: 1 group: edge language: generic os: linux script:    - "cd $HOME/twrp/ && git clone https://github.com/${_USERNAME_}/${_REPO_SLUG_}.git device/${_VENDORNAME_}/${_CODENAME_}"   - "rm -rf bootable/recovery && git clone https://github.com/omnirom/android_bootable_recovery -b android-9.0 --depth 1 bootable/recovery"   - |       docker run --rm -i -e USER_ID=$(id -u) -e GROUP_ID=$(id -g) -v "$(pwd):/home/builder/twrp/:rw,z" -v "${HOME}/.ccache:/srv/ccache:rw,z" fr3akyphantom/droid-builder bash << EOF       cd /home/builder/twrp/       source build/envsetup.sh       # Choose build flavor as "eng" or "userdebug"       BUILD_FLAVOR="eng"       lunch omni_${_CODENAME_}-${BUILD_FLAVOR}       make -j$(nproc --all) recoveryimage       exit       EOF services:    - docker 
